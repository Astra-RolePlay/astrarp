"use strict";(self.webpackChunknpwd_advertisements=self.webpackChunknpwd_advertisements||[]).push([[854],{2244:(e,t,n)=>{var a;n.d(t,{M:()=>a,z:()=>r}),function(e){e.GetUser="npwd-advertisements:getUser",e.GetAdvertisements="npwd-advertisements:getAdvertisements",e.CreateAdvertisement="npwd-advertisements:createAdvertisement",e.ReportAdvertisement="npwd-advertisements:reportAdvertisement",e.DeleteAdvertisement="npwd-advertisements:deleteAdvertisement",e.SetWaypointAdvertisement="npwd-advertisements:setWaypoint",e.UpdateNUI="npwd-advertisements:updateNUI"}(a||(a={}));const r=["Offensive","Nonsense"]},8039:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(2347),r=n(5974),i=n(2950),l=n.n(i),o=n(4274);const s=({children:e,mode:t})=>{const n=o.np[t],i=(0,a.Z)(n);return l().createElement(r.Z,{theme:i},e)}},304:(e,t,n)=>{n.d(t,{U:()=>s});var a=n(5137),r=n(2244),i=n(7405),l=n(5181),o=n(9146);const s=(0,a.atom)({key:"npwd-advertisements:advertisements",default:(0,a.selector)({key:"npwd-advertisements:defaultAdvertisements",get:()=>{return e=void 0,t=void 0,a=function*(){try{return(yield(0,i.Z)(r.M.GetAdvertisements))||(console.log("no response data (advertisements)"),[])}catch(e){return console.error(e),(0,l.I)()?o.g:[]}},new((n=void 0)||(n=Promise))((function(r,i){function l(e){try{s(a.next(e))}catch(e){i(e)}}function o(e){try{s(a.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,o)}s((a=a.apply(e,t||[])).next())}));var e,t,n,a}})})},7840:(e,t,n)=>{n.d(t,{L:()=>s});var a=n(5137),r=n(2244),i=n(7405),l=n(5181),o=n(9146);const s=(0,a.atom)({key:"npwd-advertisements:user",default:(0,a.selector)({key:"npwd-advertisements:defaultUser",get:()=>{return e=void 0,t=void 0,a=function*(){try{return(yield(0,i.Z)(r.M.GetUser))||(console.log("no response data (user)"),null)}catch(e){return(0,l.I)()?o.Y:null}},new((n=void 0)||(n=Promise))((function(r,i){function l(e){try{s(a.next(e))}catch(e){i(e)}}function o(e){try{s(a.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,o)}s((a=a.apply(e,t||[])).next())}));var e,t,n,a}})})},1551:(e,t,n)=>{n.d(t,{M:()=>s,Z:()=>u});var a=n(2950),r=n.n(a),i=n(2734),l=n(2658),o=n(932);const s="4rem",c=o.Z.div`
  display: flex;
  align-items: center;

  min-height: ${s};
  padding-left: 1.5rem;
  background-color: ${({backgroundColor:e})=>e};
`,u=({children:e})=>{const t=(0,i.Z)();return r().createElement(c,{backgroundColor:t.palette.primary.main},r().createElement(l.Z,{variant:"h5",color:"primary.contrastText"},e))}},8939:(e,t,n)=>{n.d(t,{Z:()=>L});var a=n(2950),r=n.n(a),i=n(9845),l=n(2643),o=n(7750),s=n(5295),c=n(8515),u=n(6867),m=n(7797),d=n(4962),p=n(7720),v=n(7153),h=n(7645),g=n(6447),f=n(2658),E=n(8979),b=n(9656),Z=n(3269),y=n(3797),w=n(8885),q=n(9334),C=n(1936),k=n(7629),x=n.n(k),S=n(1731),P=n.n(S),M=n(932),R=n(7405),_=n(2244),I=n(5137),N=n(304),A=n(7840),T=n(6235),O=function(e,t,n,a){return new(n||(n=Promise))((function(r,i){function l(e){try{s(a.next(e))}catch(e){i(e)}}function o(e){try{s(a.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,o)}s((a=a.apply(e,t||[])).next())}))};const F=(0,M.Z)(l.Z)`
  word-break: break-all;
`,U=(0,M.Z)(o.Z)`
  word-break: break-all;
`,L=({advertisement:e,onClose:t,isPreview:n})=>{var l,o;const k=(0,T.useHistory)(),S=(0,I.useRecoilValue)(A.L),M=(0,I.useSetRecoilState)(N.U),L=e.creator.citizenId===(null==S?void 0:S.citizenId),W=e.id,V=L&&!n;console.log({isCreator:L,advertisement:e,user:S});const[j,B]=(0,a.useState)(!1),[z,D]=(0,a.useState)(),[G,$]=(0,a.useState)(),J=e=>{D(e.currentTarget)},Y=()=>{null==t||t(),B(!1)},H=()=>O(void 0,void 0,void 0,(function*(){n||k.push(`/phone/dial?number=${e.creator.phoneNumber}`)})),K=()=>{n||k.push(`/messages/new?phoneNumber=${e.creator.phoneNumber}`)},Q=()=>O(void 0,void 0,void 0,(function*(){if(!n)try{yield(0,R.Z)(_.M.SetWaypointAdvertisement,{waypoint:e.waypoint}),M((t=>t.filter((t=>t.id!==e.id))))}catch(e){console.error(e)}}));return r().createElement("div",null,r().createElement(s.Z,{elevation:4},r().createElement(c.Z,{title:e.title||"Missing title",subheader:(null===(l=null==e?void 0:e.creator)||void 0===l?void 0:l.name)||"Unknown",action:r().createElement(u.Z,{onClick:J},r().createElement(i.MoreVert,null))}),r().createElement(m.Z,{onClick:()=>B(!0)},r().createElement(r().Fragment,null,e.image&&r().createElement(d.Z,{height:240,component:"img",image:e.image}),r().createElement(p.Z,{light:!0}),r().createElement(F,null,r().createElement(x(),{children:e.description||"Missing description",remarkPlugins:[P()],disallowedElements:["a"]}))))),r().createElement(v.Z,{open:j,onClose:Y,disablePortal:!0,hideBackdrop:!0,fullScreen:!0,PaperProps:{elevation:0,square:!0},sx:{position:"absolute"}},r().createElement(h.Z,null,r().createElement(g.Z,{direction:"row",justifyContent:"space-between",alignItems:"center"},r().createElement(g.Z,null,r().createElement(f.Z,{variant:"h5"},(null==e?void 0:e.title)||"Missing title"),r().createElement(f.Z,{variant:"caption"},(null===(o=null==e?void 0:e.creator)||void 0===o?void 0:o.name)||"Unknown")),r().createElement(g.Z,{direction:"row",spacing:1},r().createElement(u.Z,{onClick:J},r().createElement(i.MoreVert,null)),r().createElement(u.Z,{onClick:Y},r().createElement(i.Close,null))))),r().createElement(p.Z,null),r().createElement(U,null,r().createElement(x(),{children:(null==e?void 0:e.body)||"Missing content",remarkPlugins:[P()],disallowedElements:["a"]})),r().createElement(p.Z,null),(e.isCallable||e.isPosition)&&r().createElement(E.Z,null,r().createElement(C.Z,{p:1,pr:2.5},r().createElement(g.Z,{direction:"row",spacing:1},!V&&(null==e?void 0:e.phoneNumber)&&r().createElement(r().Fragment,null,e.isCallable&&r().createElement(r().Fragment,null,r().createElement(u.Z,{onClick:K},r().createElement(i.ChatRounded,null)),r().createElement(u.Z,{onClick:H},r().createElement(i.PhoneRounded,null))),e.waypoint&&e.isPosition&&r().createElement(u.Z,{onClick:Q},r().createElement(i.RoomRounded,null))))))),r().createElement(b.Z,{anchorEl:z,open:Boolean(z),onClose:()=>{D(void 0)},anchorOrigin:{horizontal:"center",vertical:"center"},transformOrigin:{horizontal:"right",vertical:"center"}},r().createElement(Z.Z,{disablePadding:!0,sx:{minWidth:150}},!V&&e.isCallable&&r().createElement(r().Fragment,null,r().createElement(y.Z,{onClick:H},r().createElement(w.Z,null,r().createElement(i.CallRounded,null)),r().createElement(q.Z,null,"Call")),r().createElement(y.Z,{onClick:K},r().createElement(w.Z,null,r().createElement(i.ChatRounded,null)),r().createElement(q.Z,null,"Chat"))),e.waypoint&&e.isPosition&&r().createElement(y.Z,{onClick:Q},r().createElement(w.Z,null,r().createElement(i.RoomRounded,null)),r().createElement(q.Z,null,"Show on map")),r().createElement(r().Fragment,null,r().createElement(p.Z,{light:!0}),r().createElement(y.Z,{onClick:e=>{$(e.currentTarget)}},r().createElement(w.Z,null,r().createElement(i.ReportRounded,null)),r().createElement(q.Z,null,"Report"))),L&&r().createElement(r().Fragment,null,r().createElement(p.Z,{light:!0}),r().createElement(y.Z,null,r().createElement(w.Z,null,r().createElement(i.EditRounded,null)),r().createElement(q.Z,null,"Edit")),r().createElement(y.Z,{onClick:()=>O(void 0,void 0,void 0,(function*(){if(!n)try{yield(0,R.Z)(_.M.DeleteAdvertisement,{advertisementId:W}),M((t=>t.filter((t=>t.id!==e.id))))}catch(e){console.error(e)}}))},r().createElement(w.Z,null,r().createElement(i.DeleteRounded,null)),r().createElement(q.Z,null,"Delete"))))),r().createElement(b.Z,{anchorEl:G,open:Boolean(G),onClose:()=>{D(void 0),$(void 0)},anchorOrigin:{horizontal:"center",vertical:"center"},transformOrigin:{horizontal:"center",vertical:"center"}},r().createElement(Z.Z,{disablePadding:!0,sx:{minWidth:150}},_.z.map((e=>r().createElement(y.Z,{onClick:()=>(e=>O(void 0,void 0,void 0,(function*(){if(!n)try{yield(0,R.Z)(_.M.ReportAdvertisement,{advertisementId:W,reason:e})}catch(e){console.error(e)}})))(e)},r().createElement(q.Z,null,e)))))))}},7405:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(5181);const r=function(e,t,n){return r=this,i=void 0,o=function*(){const r={method:"post",headers:{"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify(t)};if((0,a.I)()&&n)return n;const i=(0,a.I)()?`http://localhost:5005/${e.replace(":","-")}`:`https://npwd_advertisements/${e}`,l=yield fetch(i,r),o=yield l.json();if("ok"!==o.status)throw new Error(o.errorMsg);return o.data},new((l=void 0)||(l=Promise))((function(e,t){function n(e){try{s(o.next(e))}catch(e){t(e)}}function a(e){try{s(o.throw(e))}catch(e){t(e)}}function s(t){var r;t.done?e(t.value):(r=t.value,r instanceof l?r:new l((function(e){e(r)}))).then(n,a)}s((o=o.apply(r,i||[])).next())}));var r,i,l,o}},5181:(e,t,n)=>{n.d(t,{I:()=>a});const a=()=>!1},9146:(e,t,n)=>{n.d(t,{Y:()=>r,g:()=>i});const a="# Patrios meae\n\n## Purpureae et oculos foribus neu\n\nLorem markdownum Menoeten tetigit. Inque nate nec seu corpus antiquis solus,\nauram luctus, nemus pariterque ait, foliisque parte? Et oscula animo? Pastores\nviros quos: tu parantis aulam rebus cornua: inque ira rursus habeo veste [et\ndabo](#nisi-facta) tertius ferax cernentem. Coronae formam gelidoque et posuisse\nper benignior qua tamen sua.\n\n- Adversaque illa\n- Plus ora ait pudore Dictaeaque parato\n- Si stetit coepit\n- Tendit sine\n\nVeneni quamquam utrimque frequento cupiere; alto alte memores est per vaccam\nvincis aliqua tamen circumspicit temerarius ungues inter tuli. Subitam generat\nhabitabat quae quanta tenuit!\n\n## Saturnius fit cinxit pacalibus pictas nostrae genuum\n\nGremio virga cum. Veri nam occasus Scylla sparsi est, et enim nec, sed. Legit\nconsolantia vultum mutua dedit quoque caenumque rogata restabat?\n\n    parallel += externalHandle / transfer;\n    packet = faq_page_dongle;\n    var drop_url_xp = yobibyte_leaf + exif.mapBox(pim, 20, card) -\n            memoryMonitor;\n\nSpeciem errant. Confusaque nulla. Sed posita rarior paulatimque locus. Spartana\nquid, facies nec; animos obruta, **in tum officio** qualia amplexaque virginis.\n\nEt *qui* utimur iam si pars feliciter, tendebat loquentis inhospita nunc.\nGorgonei ante conferat amanti, summo quorum nudare colli levare Icare decent.",r={name:"Kalle Kula",citizenId:"y121asdk"},i=[{id:1,title:"Taxi service",description:"\n  ### Taxi service for the people\n  Welcome and take a ride in **my** car!\n",body:"# Eurytidos simplex\n\n## Maeandri Messenia\n\nLorem **markdownum** adversae diros, sunt. Minimum sui caelum placuerunt, et\ncausa illi erudit herbae coepit habitat ad. Currus sanguine poteram imitetur,\npondere aeraque inscribit Venulus, est nostra, Sperchios et\n[corvum](http://www.misitubi.net/sucis-enim) in. [Novis successibus\nAmmon](http://necmonstri.net/curam.php) umbra traxit felix tumidarum fortiter\npennarum intravit ille frater omnia, clamore iniuria?\n\nNon tanto nititur temperie *raucaque potes* fera recepto, ut pectore. Ut te mihi\ncorpore.\n\n## Nam mihi ita in exstinctus tacito summas\n\nCepit ubi Olympus, facilesque ore. Tum illo est, rege sine patriumque posses\npraebetis pugnat aula sed Fortuna illud; [inpia\nsic](http://www.iacentem-istis.io/reddit-o.html) in? *Fide siccaeque signumque*\ndiscedite, quam paterer et adulter prima, *aethere latus* leti per Daedalion\nlongo fuisset vix. Notavi luxuriant me orat sociis tellus, nunc inquit carmine\nin manebo *telisque rogat* oscula.\n\nBibendo et carpit unica dubiaque, vis depresso populo non, ex. Caeso hinnitus ad\nisto raptu delata agat numen aetatis nec. Quis mala non sinus habet donec,\noculos nec, capillos me pluvio. Neci qui marmoreo, te **quid**, iam cladi\ninclusum ardesceret Atlantis concrescere absens **amplexus** recusem, quos\nlumine arces.\n\n## Ultor ficto fronte exit tauro harundinis tutus\n\nMiram laniger attulit coloribus satis mearumin, cetera caeso antris cruciabere\nfacerent gloria Titan. Flores iactari; et levavit freta nec vinces amabam, Iulo\nviris, renoventur obortae! Electarumque curae hoc, nec non nostraque ceu illa\n*Ophias*, visaque. Solaque Peliaeque ut **cladem**, ne sternit siqua, cum iungi\npariterque Iovis, dira olor, videbitur. Capientur dolorem extulit eram formatus;\ninpete dentes nant deique fuerunt magna terram ni nocendo repono pavidam paterna\neripitur.\n\n    bareProgramming(ddr(chip.threading(spoofingVista), 4), permalinkEbook(-1,\n            fi_flash_thyristor(skyscraper), 4 + left_overwrite));\n    if (abend > xpTitle) {\n        memory_nas_backbone = googleBlog;\n        soString.pci_it *= 4;\n        ethernet(troll);\n    } else {\n        driveTrashAccess -= file_interface_rpc / 4;\n        application(ultra_ip_control, zip_folder_cd);\n        cdfs_click_raw = memory;\n    }\n    ict_processor_qbe.boolean = myspace;\n    var keyMotionDefault = gifWikiFddi + 4 + favoritesWordUdp(\n            stickSkyscraperFile);\n    server_pipeline_ad = 82;\n\nGenu animorum illa madidas: latus plangoremque ponit saepe, si Stygiam serior\nmeos unam, orsa. Carpit retinens, tremulaeque [valle\nictus](http://ait-cibo.io/), caput ora agam. Versasse nostris quam. Non et erit\nnec volentem novus ad conatoque ipse [et](http://proles.org/): Enipeus imperio\ndecoris latarumque trepidos.\n\nDe tanta saevo causa nemorum aequaverit superamur modo cernis contineat ait bis,\n**aut hinc**. Qui dotatissima nempe redderet cuius Stygias Boreas; potius\nsuccincta annos, ante potuit, Saeculaque divamque. Tibi victoria Aeoliis colla\ntelluris quamquam et longa, in.",creator:r,image:"https://images.pexels.com/photos/909907/pexels-photo-909907.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",phoneNumber:"072-12312",isCallable:!0,isPosition:!1},{id:2,title:"Other services",description:"This is a short description displaying this *feature*. It's using **markdown** as well.",body:a,creator:r,phoneNumber:"072-12312",isCallable:!0,isPosition:!1},{id:3,title:"Car repairs AB",description:"Come get repairs, expensive af.",body:a,creator:r,phoneNumber:"072-12312",isCallable:!0,isPosition:!1}]},7195:(e,t,n)=>{n.d(t,{Z:()=>u});var a=n(6447),r=n(1268),i=n(2950),l=n.n(i),o=n(5137),s=n(304),c=n(8939);const u=()=>{const e=(0,o.useRecoilValue)(s.U),[t,n]=(0,i.useState)(""),u=e.filter((e=>{var n;return null===(n=e.title)||void 0===n?void 0:n.toLowerCase().includes(t.toLowerCase())}));return l().createElement("div",null,l().createElement(a.Z,{spacing:1.5},l().createElement(r.SearchField,{placeholder:"Search ..",value:t,onChange:e=>n(e.target.value)}),u.map((e=>l().createElement(c.Z,{advertisement:e,key:e.id})))))}},5598:(e,t,n)=>{n.d(t,{Z:()=>R});var a=n(9845),r=n(1781),i=n(6447),l=n(2658),o=n(7720),s=n(270),c=n(6867),u=n(3709),m=n(542),d=n(2021),p=n(6186),v=n(6914),h=n(1268),g=n(1936),f=n(2950),E=n.n(f),b=n(2),Z=n(6235),y=n(5137),w=n(9352),q=n(2244),C=n(304),k=n(7840),x=n(8939),S=n(7405),P=n(9146);const M={title:"",description:"",body:"",image:"",isCallable:!1,isPosition:!1},R=()=>{var e;const t=(0,Z.useHistory)(),n=(0,y.useRecoilValue)(k.L),R=(0,y.useSetRecoilState)(C.U),[_,I]=((e,t)=>{const[n,a]=(0,f.useState)((()=>{const n=localStorage.getItem(e);return n?JSON.parse(n):t}));return[n,t=>{a(t),localStorage.setItem(e,JSON.stringify(t))}]})("npwd-create-advertisement",M),[N,A]=(0,f.useState)(""),[T,O]=(0,f.useState)(!1),[F,U]=(0,f.useState)(!1),L=((0,Z.useParams)(),(0,Z.useLocation)()),W=new URLSearchParams(L.search),{getValues:V,control:j,handleSubmit:B,setValue:z,reset:D}=(0,b.useForm)({defaultValues:_});(0,f.useEffect)((()=>{const e=W.get("image")||_.image;return z("image",e),()=>{const e=V();I(e)}}),[]);const G=()=>{t.push(`/camera?referal=${w.path}/create`)};return F?E().createElement(E().Fragment,null,E().createElement(x.Z,{isPreview:!0,advertisement:Object.assign(Object.assign({},V()),{id:-1,creator:P.Y,phoneNumber:null!==(e=null==n?void 0:n.phoneNumber)&&void 0!==e?e:"Unknown",waypoint:{x:0,y:0}})}),E().createElement(g.Z,{sx:{position:"absolute",bottom:"4.5rem",right:"1.5rem"}},E().createElement(r.Z,{onClick:()=>U(!1),variant:"extended"},"Close preview"))):E().createElement("form",{onSubmit:B((e=>{return n=void 0,a=void 0,i=function*(){O(!0);try{const n=yield(0,S.Z)(q.M.CreateAdvertisement,e);R((e=>[...e,n])),D(M),t.push(w.path),A("")}catch(e){A(e.message)}O(!1)},new((r=void 0)||(r=Promise))((function(e,t){function l(e){try{s(i.next(e))}catch(e){t(e)}}function o(e){try{s(i.throw(e))}catch(e){t(e)}}function s(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(l,o)}s((i=i.apply(n,a||[])).next())}));var n,a,r,i}))},E().createElement(i.Z,{spacing:.5},E().createElement(l.Z,{variant:"h5"},"New advertisement"),E().createElement(l.Z,{variant:"caption"},"You can edit your advertisement from the advertisements view")),E().createElement(o.Z,{sx:{margin:"1.5rem 0"}}),E().createElement(i.Z,{spacing:2},E().createElement(b.Controller,{name:"title",control:j,rules:{required:{message:"Required field",value:!0},minLength:{message:"Min length 3",value:3},maxLength:{message:"Max length 20",value:20}},render:({field:e,fieldState:t})=>{var n,a;return E().createElement(h.TextField,Object.assign({placeholder:"Title",variant:"outlined",fullWidth:!0,error:Boolean(t.error),helperText:null!==(a=null===(n=t.error)||void 0===n?void 0:n.message)&&void 0!==a?a:""},e))}}),E().createElement(b.Controller,{name:"image",control:j,render:({field:e})=>E().createElement(h.TextField,Object.assign({placeholder:"Image",fullWidth:!0,variant:"outlined",InputProps:{endAdornment:E().createElement(s.Z,{position:"end"},E().createElement(c.Z,{onClick:G},E().createElement(a.ImageRounded,null)))}},e))}),E().createElement(b.Controller,{name:"description",control:j,rules:{required:{message:"Required field",value:!0},minLength:{message:"Min length 15",value:15},maxLength:{message:"Max length 100",value:100}},render:({field:e,fieldState:t})=>{var n,a;return E().createElement(h.TextField,Object.assign({placeholder:"Description",variant:"outlined",fullWidth:!0,error:Boolean(t.error),helperText:null!==(a=null===(n=t.error)||void 0===n?void 0:n.message)&&void 0!==a?a:"",rows:3,multiline:!0},e))}}),E().createElement(b.Controller,{name:"body",control:j,rules:{required:{message:"Required field",value:!0},minLength:{message:"Min length 50",value:50},maxLength:{message:"Max length 3000",value:3e3}},render:({field:e,fieldState:t})=>{var n,a;return E().createElement(h.TextField,Object.assign({placeholder:"Body",fullWidth:!0,variant:"outlined",error:Boolean(t.error),helperText:null!==(a=null===(n=t.error)||void 0===n?void 0:n.message)&&void 0!==a?a:"",rows:6,multiline:!0},e))}}),E().createElement(i.Z,{spacing:.5},E().createElement(u.Z,null,E().createElement(m.Z,{label:"Show phone number",control:E().createElement(b.Controller,{name:"isCallable",control:j,render:({field:e})=>E().createElement(d.Z,Object.assign({},e,{checked:e.value}))})}),E().createElement(m.Z,{label:"Display your location",control:E().createElement(b.Controller,{name:"isPosition",control:j,render:({field:e})=>E().createElement(d.Z,Object.assign({},e,{checked:e.value}))})}))),N&&E().createElement(p.Z,{icon:T?E().createElement(a.RefreshRounded,null):E().createElement(a.ErrorRounded,null),color:T?"info":"error",variant:"outlined"},T?"Loading ..":N),E().createElement(v.Z,{fullWidth:!0,variant:"outlined",onClick:()=>U(!0),disabled:T},"Preview"),E().createElement(v.Z,{fullWidth:!0,variant:"contained",type:"submit",disabled:T},"Publish")))}},4147:e=>{e.exports=JSON.parse('{"u2":"npwd_advertisements"}')}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,